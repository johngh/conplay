#!/usr/bin/perl
use warnings;
use strict;

use Time::HiRes qw(usleep nanosleep);

=duration and pitch
    http://man7.org/linux/man-pages/man4/console_codes.4.html
    ESC [ 10 ; n ]   Set bell frequency in Hz.
    ESC [ 11 ; n ]   Set bell duration in msec.
=cut

=note frequencies
    http://en.wikipedia.org/wiki/Piano_key_frequencies
=cut

# Notes
my $notes;
my $freqs = 'freqs.txt';

open (my $freqs_fh, "$freqs") || die "Can't read '$freqs': $!\n";
while (defined (my $line = <$freqs_fh>)) {

    #
    next if $line !~ /^([A-Ga-g1-5_]+)\s+([\d\.]+)$/;
    my ($note, $freq) = ($1, $2);
    chomp $freq;
    $notes->{$note} = $freq;

}
close $freqs_fh;

# Duration
my $dur;
my $durs = 'durs.txt';

open (my $durs_fh, "$durs") || die "Can't read '$durs': $!\n";
while (defined (my $line = <$durs_fh>)) {

    #
    next if $line !~ /^([a-z]{2})\s+([\d]+)$/;
    my ($note, $ms) = ($1, $2);
    chomp $ms;
    $dur->{$note} = $ms;

}
close $durs_fh;

sub play($$) {
    my ($freq, $dur) = (shift, shift);
    # ESC [ 10 ; n ]   Set bell frequency in Hz.
    # ESC [ 11 ; n ]   Set bell duration in msec.
    printf("\e[10;%d]\e[11;%d]\a\e[1;1H\n", $freq, $dur);
    rest ($dur);
    return 0;
}

sub rest($) {

    my $dur = shift;

    # 1 millisecond == 1000 microseconds
    usleep($dur*1000);
    return 0;

}

my $file = shift;
die "Usage: $0 MUSIC_FILE\n" if ! $file;

printf "\ec\e]R";

open (my $file_fh, "$file") || die "Can't read '$file': $!\n";
while (defined (my $line = <$file_fh>)) {

    #
    next if $line =~ /^\s*$/;
    if ( $line =~ /([A-Ga-z\d_]+):([a-z]{2})/ ) {
        if ( $1 eq 'rest' ) {
            rest $dur->{$2};
        } else {
            play $notes->{$1}, $dur->{$2};
        }
    } elsif ( $line =~ /^# (.*)$/) {
        printf "\e[H\e[J$1\n";
    } else {
        chomp $line;
        die "Nasty line: [$line]\n";
    }

}
close $file_fh;

printf "\ec\e]R"

